<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingyuan.mapper.NodeMapper">
  <resultMap id="BaseResultMap" type="com.qingyuan.pojo.Node">
    <id column="node_id" jdbcType="INTEGER" property="nodeId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="nodeType_id" jdbcType="INTEGER" property="nodeTypeId" />
    <result column="applyUser_id" jdbcType="INTEGER" property="applyUserId" />
    <result column="apply_time" jdbcType="VARCHAR" property="applyTime" />
    <result column="node_status" jdbcType="VARCHAR" property="nodeStatus" />
    <result column="model_id" jdbcType="INTEGER" property="modelId"/>
    <result column="approveType_id" jdbcType="INTEGER" property="approveTypeId" />
    <result column="approveUsers_id" jdbcType="VARCHAR" property="approveUsersId" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="approveAuthority_id" jdbcType="INTEGER" property="approveAuthorityId" />
    <result column="startNode_id" jdbcType="INTEGER" property="startNodeId" />
    <result column="preNode_id" jdbcType="INTEGER" property="preNodeId" />
    <result column="nextNode_id" jdbcType="INTEGER" property="nextNodeId" />
    <result column="endNode_id" jdbcType="INTEGER" property="endNodeId" />
  </resultMap>
  <sql id="Base_Column_List">
    node_id, node_name, nodeType_id, applyUser_id,model_id, apply_time, node_status, approveType_id,
    approveUsers_id, start_time, end_time, approveAuthority_id, startNode_id, preNode_id, 
    nextNode_id, endNode_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node
    where node_id = #{nodeId,jdbcType=INTEGER}
  </select>
  <select id="selectNodeByModelId" resultType="com.qingyuan.pojo.Node">
    select
    <include refid="Base_Column_List"/>
    FROM node
    WHERE model_id = #{modelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from node
    where node_id = #{nodeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="node_id" keyProperty="nodeId" parameterType="com.qingyuan.pojo.Node">
    insert into node (node_name, nodeType_id, applyUser_id, model_id,
      apply_time, node_status, approveType_id, 
      approveUsers_id, start_time, end_time, 
      approveAuthority_id, startNode_id, preNode_id, 
      nextNode_id, endNode_id)
    values (#{nodeName,jdbcType=VARCHAR}, #{nodeTypeId,jdbcType=INTEGER}, #{applyUserId,jdbcType=INTEGER}, #{modelId,jdbcType=INTEGER},
      #{applyTime,jdbcType=VARCHAR}, #{nodeStatus,jdbcType=VARCHAR}, #{approveTypeId,jdbcType=INTEGER},
      #{approveUsersId,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR},
      #{approveAuthorityId,jdbcType=INTEGER}, #{startNodeId,jdbcType=INTEGER}, #{preNodeId,jdbcType=INTEGER},
      #{nextNodeId,jdbcType=INTEGER}, #{endNodeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="node_id" keyProperty="nodeId" parameterType="com.qingyuan.pojo.Node" useGeneratedKeys="true">
    insert into node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="nodetypeId != null">
        nodeType_id,
      </if>
      <if test="applyuserId != null">
        applyUser_id,
      </if>

      <if test="modelId != null">
        model_id
      </if>

      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="nodeStatus != null">
        node_status,
      </if>
      <if test="approvetypeId != null">
        approveType_id,
      </if>
      <if test="approveusersId != null">
        approveUsers_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="approveauthorityId != null">
        approveAuthority_id,
      </if>
      <if test="startnodeId != null">
        startNode_id,
      </if>
      <if test="prenodeId != null">
        preNode_id,
      </if>
      <if test="nextnodeId != null">
        nextNode_id,
      </if>
      <if test="endnodeId != null">
        endNode_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="nodetypeId != null">
        #{nodeTypeId,jdbcType=INTEGER},
      </if>
      <if test="applyuserId != null">
        #{applyUserId,jdbcType=INTEGER},
      </if>


      <if test="modelId != null">
        #{modelId,jdbcType=INTEGER},
      </if>

      <if test="applyTime != null">
        #{applyTime,jdbcType=VARCHAR},
      </if>
      <if test="nodeStatus != null">
        #{nodeStatus,jdbcType=VARCHAR},
      </if>
      <if test="approvetypeId != null">
        #{approveTypeId,jdbcType=INTEGER},
      </if>
      <if test="approveusersId != null">
        #{approveUsersId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="approveauthorityId != null">
        #{approveAuthorityId,jdbcType=INTEGER},
      </if>
      <if test="startnodeId != null">
        #{startNodeId,jdbcType=INTEGER},
      </if>
      <if test="prenodeId != null">
        #{preNodeId,jdbcType=INTEGER},
      </if>
      <if test="nextnodeId != null">
        #{nextNodeId,jdbcType=INTEGER},
      </if>
      <if test="endnodeId != null">
        #{endNodeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qingyuan.pojo.Node">
    update node
    <set>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="nodetypeId != null">
        nodeType_id = #{nodeTypeId,jdbcType=INTEGER},
      </if>
      <if test="applyuserId != null">
        applyUser_id = #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=VARCHAR},
      </if>

      <if test="modelId != null">
       model_id #{modelId,jdbcType=INTEGER},
      </if>

      <if test="nodeStatus != null">
        node_status = #{nodeStatus,jdbcType=VARCHAR},
      </if>
      <if test="approvetypeId != null">
        approveType_id = #{approveTypeId,jdbcType=INTEGER},
      </if>
      <if test="approveusersId != null">
        approveUsers_id = #{approveUsersId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="approveauthorityId != null">
        approveAuthority_id = #{approveAuthorityId,jdbcType=INTEGER},
      </if>
      <if test="startnodeId != null">
        startNode_id = #{startNodeId,jdbcType=INTEGER},
      </if>
      <if test="prenodeId != null">
        preNode_id = #{preNodeId,jdbcType=INTEGER},
      </if>
      <if test="nextnodeId != null">
        nextNode_id = #{nextNodeId,jdbcType=INTEGER},
      </if>
      <if test="endnodeId != null">
        endNode_id = #{endNodeId,jdbcType=INTEGER},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qingyuan.pojo.Node">
    update node
    set node_name = #{nodeName,jdbcType=VARCHAR},
      nodeType_id = #{nodeTypeId,jdbcType=INTEGER},
      applyUser_id = #{applyUserId,jdbcType=INTEGER},
      model_id = #{modelId,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=VARCHAR},
      node_status = #{nodeStatus,jdbcType=VARCHAR},
      approveType_id = #{approveTypeId,jdbcType=INTEGER},
      approveUsers_id = #{approveUsersId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      approveAuthority_id = #{approveAuthorityId,jdbcType=INTEGER},
      startNode_id = #{startNodeId,jdbcType=INTEGER},
      preNode_id = #{preNodeId,jdbcType=INTEGER},
      nextNode_id = #{nextNodeId,jdbcType=INTEGER},
      endNode_id = #{endNodeId,jdbcType=INTEGER}
    where node_id = #{nodeId,jdbcType=INTEGER}
  </update>
</mapper>